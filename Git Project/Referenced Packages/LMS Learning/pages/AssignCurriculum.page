<apex:page standardController="lmscons__Curriculum__c" extensions="lmscons.Curriculum">

	<apex:includeScript value="{!URLFOR($Resource.lmscons__LMSSource, 'js/jquery-1.6.4.js')}"/>
	<apex:sectionHeader title="{!$ObjectType.lmscons__Curriculum__c.label}" subtitle="{!lmscons__Curriculum__c.Name}" />

	<apex:pageMessages id="pageMessages" />

	<!-- Enhanced Action Status -->
	<apex:actionStatus id="loadStatus">
	<apex:facet name="start">
		<c:EnhancedActionStatus BackColor="#efefef" borderColor="#336699"
						borderSize="1" height="50px" width="120px" ImageUrl="/img/loading.gif"
						Message="{!$Label.Loading}" messageStyle="color:darkred;font-size:11pt;font-weight:bold;"/>
	</apex:facet>
	</apex:actionStatus>
	<apex:actionStatus startText=""  id="busyStatus"
		onStart="document.body.style.cursor = 'wait';return true;"
		onStop="document.body.style.cursor = 'default';return true;" >
	</apex:actionStatus>

	<!-- <apex:actionfunction name="doSearchGroup" action="{!resetGroups}" status="loadStatus" rerender="Groups,pageMessages" />
	<apex:actionfunction name="doSearchTrainee" action="{!resetTraineeSearch}" status="loadStatus" rerender="pageblocksectionId,pageControls1,pageControls2,pageMessages" /> -->
	<apex:form >
		<apex:commandLink onclick="backToCurriculum(); return false;" value="Back to curriculum" id="backtodevplan" style="padding-bottom:5px;"/>
		<br/><br/>
	</apex:form>

	<c:TraineesTable LearningObjectType="Curriculum__c" LearningObjectTypeID="{!lmscons__Curriculum__c.Id}" LearningObjectLabel="Curriculum"/>

	<apex:form >

			<apex:actionFunction action="{!AssignFromPage}" name="AssignTraineeAction" rerender="pageMessages" oncomplete="enableAssignBtn();closeLoadingLightBox();">
				<apex:param name="SelectedRecords" assignTo="{!SelectedRecords4Assign}" value="" />
				<apex:param name="Dummy" assignTo="{!Dummy.Due_Date__c}" value="" />
				<apex:param name="CurriculumAssignmentPeriods" assignTo="{!curriculumAssignment.Recurring_Training_Periods__c}" value="" />
				<apex:param name="CurriculumAssignmentPeriodType" assignTo="{!curriculumAssignment.Recurring_Training_Period_Type__c}" value="" />
				<apex:param name="CurriculumAssignmentEnabled" assignTo="{!curriculumAssignment.Recurring_Training_Enabled__c}" value="" />
			</apex:actionFunction>

	</apex:form>



	<script  type="text/javascript">


	function backToCurriculum() {
		location.href = "/{!lmscons__Curriculum__c.Id}";
	}
	function backToDetails() {
		backToCurriculum();
	}

	//--------------------------------------
	var intSelectedItemsCount = 0;

	jQuery(document).ready(function(){
		jQuery('[id$="DueDateId"]').val('').parent().hide();
		jQuery('[id$="recurringData"]').val('').hide();
	});

	function showDueDate(){
		if (document.getElementById('DueDateCheckBox').checked == true) {
			jQuery('[id$="DueDateId"]').parent().toggle();
		} else {
			jQuery('[id$="DueDateId"]').val('').parent().hide();
		}
	}

	function disableAssignBtn() {
		if(dataValid()){
			return false;
		}
		else {
			if (jQuery('input[id*=AssignBtn]').prop("disabled")) {
				return false;
			}
			else {
				jQuery('input[id*= AssignBtn],[id*=CancelBtn]').attr('class', 'btnDisabled').prop('disabled', 'disabled');
				return true;
			}
		}
	}

	function enableAssignBtn() {
		jQuery('input[id*=AssignBtn],[id*=CancelBtn]').attr('class', 'btn').removeProp('disabled');
	}
	function dataValid(){
		return recurringDataValid() && checkDueDate();
	}
	function showRecurringData() {
		if (document.getElementById(jQuery('[id$="enableRecurringTrainingCheckbox"]').attr('id')).checked == true) {
			jQuery('[id$="recurringData"]').toggle();
		} else {
			jQuery('[id$="recurringData"]').val('').hide();
		}
	}
	function isInteger(value) {
		return !isNaN(parseInt(value,10)) && (parseFloat(value,10) == parseInt(value,10));
	}
	function recurringDataValid() {

		var enableRecurringTraining = document.getElementById(jQuery('[id$="enableRecurringTrainingCheckbox"]').attr('id')).checked;

		if(enableRecurringTraining == true) {
			var recurringTrainingPeriods = document.getElementById(jQuery('[id$="recurringTrainingPeriods"]').attr('id')).value;
			var recurringTrainingPeriodType = document.getElementById(jQuery('[id$="recurringTrainingPeriodType"]').attr('id')).value
			if(!isInteger(recurringTrainingPeriods)) {
				alert('{!JSENCODE($Label.Recurring_training_periods_should_be_positive_integer)}');
				return false;
			}

			if(recurringTrainingPeriods <= 0) {
				alert('{!JSENCODE($Label.Recurring_training_periods_should_be_positive_integer)}');
				return false;
			}

			if(recurringTrainingPeriods != null && recurringTrainingPeriodType == null) {
				alert('{!JSENCODE($Label.Please_specify_both_recurring_traing_period)}');
				return false;
			}

			if(recurringTrainingPeriods == null && recurringTrainingPeriodType != null) {
				alert('{!JSENCODE($Label.Please_specify_both_recurring_traing_period)}');
				return false;
			}

		}
		return true;
	}

	function checkDueDate() {
		var dateElement = jQuery('input[id*=DueDateId]').val();
		var ddcheckbox = document.getElementById('DueDateCheckBox').checked;
		if ( dateElement != null && dateElement != '' && ddcheckbox == true ) {
			var dateToday = new Date();
			var dateInput = new Date();
			dateInput.setTime(Date.parse(dateElement));
			if (( ( dateInput.getFullYear() < dateToday.getFullYear() ) ) ||
				( ( ( dateInput.getFullYear() == dateToday.getFullYear() ) )&&( ( dateInput.getMonth() < dateToday.getMonth() ) ) ) ||
				( ( ( dateInput.getFullYear() == dateToday.getFullYear() ) )&&( ( dateInput.getMonth() == dateToday.getMonth() ) )&&( ( dateInput.getDate() < dateToday.getDate() ) ) ) ) {
				alert('{!$Label.Warning}:\n{!$Label.Due_date_should_not_be_less_than_the_current_one}');
				return true;
			} else return false;
		} else return false;
	}

	function CheckUncheckLicense(elem) {
		var row = elem;

		var checkboxSelected = row.cells[0].getElementsByTagName("input")[0].checked;
		if (checkboxSelected == true) {
			var selectedContentId = row.cells[1].getElementsByTagName("span")[1].getElementsByTagName("span")[0].innerHTML;
			var selectedLicenseId = row.cells[1].getElementsByTagName("span")[1].getElementsByTagName("span")[1].innerHTML;
			refresh(selectedContentId, row.parentNode);
			row.cells[0].getElementsByTagName("input")[0].checked = true;
			//resetTraineeSearch(selectedContentId, selectedLicenseId);
		}
	}

	function refresh(selectedContentId, objTable) {
		var objRows = objTable.getElementsByTagName('tr');
		var iIndex = 0;
		for(iIndex = 0; iIndex < objRows.length; iIndex++) {
			//objRows[iIndex].bgColor = "";
			//objRows[iIndex].cells[0].getElementsByTagName("input")[0].checked = false;
			var objCol = objRows[iIndex].cells[0].getElementsByTagName("input")[0];
			if (objCol != null) {
				if (selectedContentId == objRows[iIndex].cells[1].getElementsByTagName("span")[1].getElementsByTagName("span")[0].innerHTML) {
					objCol.checked = false;
				}
			}
		}
	}

	function CheckUncheckFacet(obj)
	{
		//document.getElementById('AssignTrainingPathPageId:AssignTrainingPathFormId:pageblockId:pageblocksectionId:pageblocktableid:selectall').checked = false;
		if(obj.checked)
			intSelectedItemsCount = intSelectedItemsCount + 1;
		else
			intSelectedItemsCount = intSelectedItemsCount - 1;
	}

	function selectChecked(form, value)
	{
		var i = 0;
		for (i = 0; i < form.elements.length; i++) {
			if (form.elements[i].name.search('selected') > 0 && form.elements[i].disabled == false) {
				if (form.elements[i].checked != value){
					if (value)
						intSelectedItemsCount = intSelectedItemsCount + 1;
					else
						intSelectedItemsCount = intSelectedItemsCount - 1;
				}
				form.elements[i].checked = value;
			}
		}
	}

	function selectAllOrNoneByCheckbox(form, control)
	{
	selectChecked(form, control.checked);
	}

		function handleKeyPressForGroup(e){
		var eventInstance = window.event ? event : e;
		var keyCode = eventInstance.charCode ? eventInstance.charCode : eventInstance.keyCode;
		if (keyCode == 13){
			doSearchGroup();
			return false;
		}
	}

	function handleKeyPressForTrainee(e){
		var eventInstance = window.event ? event : e;
		var keyCode = eventInstance.charCode ? eventInstance.charCode : eventInstance.keyCode;
		if (keyCode == 13){
			doSearchTrainee();
			return false;
		}
	}
	</script>

</apex:page>